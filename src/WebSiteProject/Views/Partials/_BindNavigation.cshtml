@using System.Collections
@using System.Collections.Immutable
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@functions {
    private static string GetRelativeSafeOrAbsoluteUriPath(string nodeUrl)
    {
        if (!string.IsNullOrWhiteSpace(nodeUrl)) {
            var uri = new Uri(nodeUrl, UriKind.RelativeOrAbsolute);
            var uriPath = uri.IsAbsoluteUri ? uri.AbsoluteUri : uri.OriginalString;
            return uriPath;
        } else {
            return string.Empty;
        }
    }
}

@helper CreateSubmenu(IImmutableList<IPublishedContent> navItems, int homeId, List<int> selectedNodeList)
{
    if (navItems == null || !navItems.Any()) 
    {
        return;
    }
        
    foreach (var navItem in navItems)
    {
        if (navItem.DocumentTypeAlias == "navigationItem")
        {
            var childrenNavItems = navItem.Children.Where(item => !item.GetPropertyValue<bool>("hide")).ToImmutableList();

            var targetNodeId = navItem.GetPropertyValue<int>("target");
            var targetNode = Umbraco.TypedContent(targetNodeId);
            var nodePathContainsThisPage = selectedNodeList.Contains(targetNodeId);
            var uriPath = GetRelativeSafeOrAbsoluteUriPath(targetNode?.Url);
            <li class="@( nodePathContainsThisPage ? "sel" : null)">
                <a href="@uriPath">@( navItem.GetPropertyValue<string>("Title"))</a>
                @if (childrenNavItems.Any())
                {
                    <ul>
                        @CreateSubmenu(childrenNavItems, homeId, selectedNodeList)
                    </ul>
                }
            </li>
        }
        else if (navItem.DocumentTypeAlias == "externalHyperlink")
        {
            var urlAddress = navItem.GetPropertyValue<string>("urlAddress");
            var linkType = navItem.GetPropertyValue<string>("rel");
            var target = navItem.GetPropertyValue<string>("target");
            var linkText = navItem.GetPropertyValue<string>("text");
            if (string.IsNullOrWhiteSpace(target)) {
                target = null;
            }
            if (string.IsNullOrWhiteSpace(linkType)) {
                linkType = null;
            }
            <li>
                <a href="@urlAddress" target="@target" rel="@linkType">@linkText</a>
            </li>
        }
    }
}

@{
    var homePage = Model.Content.AncestorsOrSelf(1).First();
    var homeId = homePage.Id;
    var navigationNodeId = homePage.GetPropertyValue<int>("headingNavigation");
    var navigationNode = Umbraco.TypedContent(navigationNodeId);
    var navItems = navigationNode?.Children()?.Where(item => !item.GetPropertyValue<bool>("hide")).ToImmutableList();
    var selectedNodeList = Model.Content.Path.Split(',').Select(int.Parse).ToList();
    selectedNodeList.Remove(homeId);
}
<!-- Nav -->
<ul class="menu">
    <li class="@(Model.Content.Parent == null ? "sel" : null)">
        <a href="/">Home</a>
    </li>
    @CreateSubmenu(navItems, homeId, selectedNodeList)
</ul>
<!-- /Nav -->